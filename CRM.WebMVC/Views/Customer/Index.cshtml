@model PagedList.IPagedList<CRM.Models.CustomerListItem>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Index";
}

<h2>Customer Database</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Customer", FormMethod.Get))


{
    <p class="text-success" style="font-weight: 800">
        Search by any portion of first name, last name, phone number, or address: @Html.TextBox("search", ViewBag.Filter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Customer ID", "Index", new { sort = ViewBag.SortByID })

        </th>
        <th>
            First Name
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sort = ViewBag.SortByName })
        </th>
        <th>

            Phone
        </th>
        <th>
            Email
        </th>
        <th>
            Street
        </th>
        <th>
            City
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new { sort = ViewBag.SortByStatus })
           
        </th>
        <th>
            Initial Contact
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        <a href="~/Customer/Details/@item.CustomerID">
            @Html.DisplayFor(modelItem => item.CustomerID)
        </a>
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LastName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.PhoneNumber)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Email)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.StreetAddress)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.City)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.StatusOfCustomer)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.InitialDateOfContact)
    </td>

</tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sort = ViewBag.Sort, filter = ViewBag.Filter }))
